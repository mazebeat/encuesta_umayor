dead_code_1:{
	options = {dead_code: true};
	input:{
		function f() {
			a();
			b();
			x = 10;
			return;
			if (x) {
				y()
			}
		}
	}
	expect:{
		function f() {
			a();
			b();
			x = 10;
			return
		}
	}
}
dead_code_2_should_warn:{
	options = {dead_code: true};
	input:{
		function f() {
			d();
			c = 10;
			throw"foo";
			if (c) {
				y();
				var c;

				function d() {
				}

				(function () {
					var e;

					function g() {
					}
				})()
			}
		}
	}
	expect:{
		function f() {
			d();
			c = 10;
			throw"foo";
			var c;

			function d() {
			}
		}
	}
}
dead_code_constant_boolean_should_warn_more:{
	options = {dead_code: true, loops: true, booleans: true, conditionals: true, evaluate: true};
	input:{
		while (!((foo && bar) || (x + "0"))) {
			console.log("unreachable");
			var foo;

			function bar() {
			}
		}
		for (var x = 10; x && (y || x) && (!typeof x); ++x) {
			asdf();
			foo();
			var moo
		}
	}
	expect:{
		var foo;

		function bar() {
		}

		var x = 10;
		var moo
	}
}
;