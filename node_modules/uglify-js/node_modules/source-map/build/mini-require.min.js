function define(a, c, b) {
	if (typeof a != "string") {
		throw new TypeError("Expected string, got: " + a)
	}
	if (arguments.length == 2) {
		b = c
	}
	if (a in define.modules) {
		throw new Error("Module already defined: " + a)
	}
	define.modules[a] = b
}
define.modules = {};
function Domain() {
	this.modules = {};
	this._currentModule = null
}
(function () {
	Domain.prototype.require = function (e, f) {
		if (Array.isArray(e)) {
			var d = e.map(function (g) {
				return this.lookup(g)
			}, this);
			if (f) {
				f.apply(null, d)
			}
			return undefined
		} else {
			return this.lookup(e)
		}
	};
	function a(f) {
		var e = f.split("/");
		var d = 1;
		while (d < e.length) {
			if (e[d] === "..") {
				e.splice(d - 1, 1)
			} else {
				if (e[d] === ".") {
					e.splice(d, 1)
				} else {
					d++
				}
			}
		}
		return e.join("/")
	}

	function c(e, d) {
		e = e.trim();
		d = d.trim();
		if (/^\//.test(d)) {
			return d
		} else {
			return e.replace(/\/*$/, "/") + d
		}
	}

	function b(e) {
		var d = e.split("/");
		d.pop();
		return d.join("/")
	}

	Domain.prototype.lookup = function (f) {
		if (/^\./.test(f)) {
			f = a(c(b(this._currentModule), f))
		}
		if (f in this.modules) {
			var g = this.modules[f];
			return g
		}
		if (!(f in define.modules)) {
			throw new Error("Module not defined: " + f)
		}
		var g = define.modules[f];
		if (typeof g == "function") {
			var e = {};
			var d = this._currentModule;
			this._currentModule = f;
			g(this.require.bind(this), e, {id: f, uri: ""});
			this._currentModule = d;
			g = e
		}
		this.modules[f] = g;
		return g
	}
}());
define.Domain = Domain;
define.globalDomain = new Domain();
var require = define.globalDomain.require.bind(define.globalDomain);