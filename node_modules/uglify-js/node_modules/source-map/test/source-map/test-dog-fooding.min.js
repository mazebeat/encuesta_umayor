if (typeof define !== "function") {
	var define = require("amdefine")(module, require)
}
define(function (d, c, e) {
	var b = d("../../lib/source-map/source-map-consumer").SourceMapConsumer;
	var a = d("../../lib/source-map/source-map-generator").SourceMapGenerator;
	c["test eating our own dog food"] = function (g, f) {
		var h = new a({file: "testing.js", sourceRoot: "/wu/tang"});
		h.addMapping({source: "gza.coffee", original: {line: 1, column: 0}, generated: {line: 2, column: 2}});
		h.addMapping({source: "gza.coffee", original: {line: 2, column: 0}, generated: {line: 3, column: 2}});
		h.addMapping({source: "gza.coffee", original: {line: 3, column: 0}, generated: {line: 4, column: 2}});
		h.addMapping({source: "gza.coffee", original: {line: 4, column: 0}, generated: {line: 5, column: 2}});
		h.addMapping({source: "gza.coffee", original: {line: 5, column: 10}, generated: {line: 6, column: 12}});
		var i = new b(h.toString());
		f.assertMapping(2, 2, "/wu/tang/gza.coffee", 1, 0, null, i, g);
		f.assertMapping(3, 2, "/wu/tang/gza.coffee", 2, 0, null, i, g);
		f.assertMapping(4, 2, "/wu/tang/gza.coffee", 3, 0, null, i, g);
		f.assertMapping(5, 2, "/wu/tang/gza.coffee", 4, 0, null, i, g);
		f.assertMapping(6, 12, "/wu/tang/gza.coffee", 5, 10, null, i, g);
		f.assertMapping(2, 0, null, null, null, null, i, g, true);
		f.assertMapping(2, 9, "/wu/tang/gza.coffee", 1, 0, null, i, g, true);
		f.assertMapping(3, 0, null, null, null, null, i, g, true);
		f.assertMapping(3, 9, "/wu/tang/gza.coffee", 2, 0, null, i, g, true);
		f.assertMapping(4, 0, null, null, null, null, i, g, true);
		f.assertMapping(4, 9, "/wu/tang/gza.coffee", 3, 0, null, i, g, true);
		f.assertMapping(5, 0, null, null, null, null, i, g, true);
		f.assertMapping(5, 9, "/wu/tang/gza.coffee", 4, 0, null, i, g, true);
		f.assertMapping(6, 0, null, null, null, null, i, g, true);
		f.assertMapping(6, 9, null, null, null, null, i, g, true);
		f.assertMapping(6, 13, "/wu/tang/gza.coffee", 5, 10, null, i, g, true);
		f.assertMapping(2, 2, "/wu/tang/gza.coffee", 1, 1, null, i, g, null, true);
		f.assertMapping(3, 2, "/wu/tang/gza.coffee", 2, 3, null, i, g, null, true);
		f.assertMapping(4, 2, "/wu/tang/gza.coffee", 3, 6, null, i, g, null, true);
		f.assertMapping(5, 2, "/wu/tang/gza.coffee", 4, 9, null, i, g, null, true);
		f.assertMapping(5, 2, "/wu/tang/gza.coffee", 5, 9, null, i, g, null, true);
		f.assertMapping(6, 12, "/wu/tang/gza.coffee", 6, 19, null, i, g, null, true)
	}
});