var spawn = require("child_process").spawn;
var test = require("tap").test;
test("dotSlashEmpty", testCmd("./bin.js", []));
test("dotSlashArgs", testCmd("./bin.js", ["a", "b", "c"]));
test("nodeEmpty", testCmd("node bin.js", []));
test("nodeArgs", testCmd("node bin.js", ["x", "y", "z"]));
test("whichNodeEmpty", function (a) {
	var b = spawn("which", ["node"]);
	b.stdout.on("data", function (c) {
		a.test(testCmd(c.toString().trim() + " bin.js", []));
		a.end()
	});
	b.stderr.on("data", function (c) {
		assert.error(c);
		a.end()
	})
});
test("whichNodeArgs", function (a) {
	var b = spawn("which", ["node"]);
	b.stdout.on("data", function (c) {
		a.test(testCmd(c.toString().trim() + " bin.js", ["q", "r"]));
		a.end()
	});
	b.stderr.on("data", function (c) {
		a.error(c);
		a.end()
	})
});
function testCmd(b, a) {
	return function (e) {
		var g = setTimeout(function () {
			assert.fail("Never got stdout data.")
		}, 5000);
		var f = process.cwd();
		process.chdir(__dirname + "/_");
		var c = b.split(" ");
		var d = spawn(c[0], c.slice(1).concat(a.map(String)));
		process.chdir(f);
		d.stderr.on("data", function (h) {
			e.error(h);
			e.end()
		});
		d.stdout.on("data", function (i) {
			clearTimeout(g);
			var h = JSON.parse(i.toString());
			e.same(h.map(String), a.map(String));
			e.end()
		})
	}
};